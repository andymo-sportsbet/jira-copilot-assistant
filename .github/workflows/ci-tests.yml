name: CI - tests

on:
  push:
    branches: [ main, '**' ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test (pytest + shell smoke)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Use stable supported Python versions (avoid alpha or unsupported versions on Ubuntu runners)
        # NOTE: versions are quoted strings to avoid YAML numeric parsing (e.g. 3.10 being parsed as 3.1)
        # Quoting ensures actions/setup-python receives the intended minor version like "3.10".
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system deps
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          if [ -f mcp-server/requirements.txt ]; then pip install -r mcp-server/requirements.txt; fi

      - name: Install dev Python deps (if present)
        run: |
          set -euo pipefail
          if [ -f dev-requirements.txt ]; then
            python -m pip install -r dev-requirements.txt
          else
            echo "No dev-requirements.txt found; skipping"
          fi

      - name: Run pytest (repo tests)
        working-directory: ${{ github.workspace }}
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          set -euo pipefail
          if [ -d tests ]; then
            python -m pytest -q tests || true
          else
            echo "No tests/ directory; skipping pytest"
          fi

      - name: Run pytest (mcp-server)
        working-directory: ${{ github.workspace }}
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          set -euo pipefail
          if [ -d mcp-server ]; then
            python -m pytest -q mcp-server || true
          else
            echo "No mcp-server directory; skipping pytest"
          fi

      - name: Run shell smoke tests (converter)
        working-directory: ${{ github.workspace }}
        run: |
          set -euo pipefail
          if [ -x tests/test-converter.sh ]; then
            bash tests/test-converter.sh
          else
            echo "No converter test runner found or not executable; skipping"
          fi

  integration:
    name: Integration tests (manual)
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run integration note
        run: |
          echo "This workflow is a placeholder for manual integration tests that require secrets."
